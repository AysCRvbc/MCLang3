@name nextbot

@define expression particle_generator
@define block mod_block
@define expression spawn_generator
@define block rule_block
@define expression nbt_expression
@define block float_block

nbt rot_axis0 = Rotation[0]
nbt rot_axis1 = Rotation[1]
float zero
float axis0
float axis1

selector stands = @e[type=armor_stand]

image lmao = "rock.png"

chat system = ["<Скала> "]

func pargen_activate() -> stands
    execute data modify entity @s NoGravity set value 1b
    execute data modify entity @s Invisible set value 1b
    execute tp ~ -60 ~
    zero.set(0)
    self.pargen = True

input activate(num) -> @a
    mod at @s
        spawn minecraft:armor_stand pargen_activate

input clear(num) -> @a
    mod as @e[type=armor_stand]
        execute kill @s

rule pgen(pargen) -> stands
    mod at @s facing entity @p[distance=..40] eyes # получаю угол между игроком и ботом
        execute tp ^ ^ ^0.1 # нужно чтобы угол поменялся под нужный перед записью
        axis0.setFromNbt(rot_axis0)
        axis1.setFromNbt(rot_axis1)
        execute tp ^ ^ ^-0.1 # возвращаю

    mod at @s rotated as @s
        mod if block ~ ~ ~ minecraft:air # если не в воздухе
            rot_axis0.storeFloat(axis0)
            rot_axis1.storeFloat(axis1) # я хочу чтобы только одна ось поворота менялась
            execute tp ^ ^ ^0.3
        mod unless block ~ ~ ~ minecraft:air
            execute tp ~ ~0.5 ~

    mod at @s as @p[distance=..2] # убиваю игрока если он слишком близко
        system.log(@s, ["Дружище, ты слаб!"])
        execute kill @s


    mod at @s
        lmao.show(3, 3, 0.35, 0.045) # отображает картинку из переменной lmao
        # первые две переменные - размер в блоках
        # третья - размер частиц
        # четвертая - частота дискретизации частиц